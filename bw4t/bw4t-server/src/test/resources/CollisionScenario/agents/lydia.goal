init module { 
	beliefs{
		second('LeftHallB').	
	}
	goals{
		location(20.0, 65.0) .	
	}
	program{
		forall bel( percept(state(State)) ) do insert( state(State) ).
		forall bel( percept(location(X, Y)) ) do insert( location(X, Y)).
		forall bel( at(Place) ) do insert( at(Place) ).
	}
	actionspec{
		goTo(X, Y) {
			pre { not(state(traveling)) }
			post { true }	
		}
		
		goTo(Location) {
			pre { not(state(traveling)) }
			post { true } 	
		}
		
		navigateObstacles {
			pre { state(collided)) }
			post { true }
		}	
	}
}

main module{
	program{
		if bel(state(collided)) then navigateObstacles.
		
	    if goal-a(location(X, Y)) then drop(location(X, Y)) .
		if a-goal(location(X, Y)) then goTo(X, Y) .
		
		if goal-a(at(Place)) then drop(at(Place)).
		if a-goal(at(Place)) then goTo(Place).
		
		if not(goal(location(_,_))), bel(second(Place)) then adopt(at(Place)) .
	}                                        
}

event module {
	program{
		if bel( state(State), percept(state(NewState)) ) then delete( state(State) ) + insert( state(NewState) ) .
		if bel( location(X, Y), percept(location(NewX, NewY))) then delete( location(X, Y)) + insert(location(NewX, NewY)) .
		if bel( at(Place), percept(at(NewPlace))) then delete( at(Place )) + insert( at(NewPlace) ).
	}
}
